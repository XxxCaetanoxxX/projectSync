// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  ORGANIZER
  PARTICIPANT
}

model tb_user {
  id        Int            @id @default(autoincrement())
  name      String
  cpf       String         @unique
  email     String         @unique
  phone     String         @unique
  password  String
  role      Role
  imageId   Int?           @unique
  image     tb_user_image? @relation()
  createdAt DateTime       @default(now())

  eventsOrganized tb_event[] @relation("OrganizerToEvent")

  eventsParticipated tb_event_participant[]
}

model tb_user_image {
  id     Int     @id @default(autoincrement())
  userId Int     @unique
  user   tb_user @relation(fields: [userId], references: [id])
  path   String
}

model tb_party_house {
  id      Int        @id @default(autoincrement())
  name    String
  address String
  events  tb_event[]
}

model tb_event {
  id   Int    @id @default(autoincrement())
  name String

  artists tb_artist_event[]

  organizerId Int
  organizer   tb_user @relation("OrganizerToEvent", fields: [organizerId], references: [id])

  participants tb_event_participant[]

  partyHouseId Int
  party_house  tb_party_house @relation(fields: [partyHouseId], references: [id], onDelete: Cascade)
}

model tb_artist {
  id     Int               @id @default(autoincrement())
  name   String
  events tb_artist_event[]
}

model tb_artist_event {
  id Int @id @default(autoincrement())

  artistId Int
  artist   tb_artist @relation(fields: [artistId], references: [id], onDelete: Cascade)

  eventId Int
  event   tb_event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([artistId, eventId])
}

model tb_event_participant {
  id Int @id @default(autoincrement())

  userId Int
  user   tb_user @relation(fields: [userId], references: [id], onDelete: Cascade)

  eventId Int
  event   tb_event @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([userId, eventId])
}
