generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tb_user {
  id                   Int            @id @default(autoincrement())
  name                 String
  cpf                  String         @unique
  email                String         @unique
  phone                String         @unique
  password             String
  role                 Role
  imageId              Int?           @unique
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  eventsOrganized      tb_event[]     @relation("OrganizerToEvent")
  image                tb_user_image?
  tickets              tb_ticket[] // Relacionamento com ingressos comprados
}

model th_user_hist {
  id                   Int       @id @default(autoincrement())
  name                 String
  cpf                  String
  email                String
  phone                String
  password             String
  role                 Role
  imageId              Int?
  user_id              Int
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  changes              String?   @default("")
}

model tb_user_image {
  id     Int     @id @default(autoincrement())
  userId Int     @unique
  path   String
  user   tb_user @relation(fields: [userId], references: [id])
}

model tb_ticket_type {
  id                   Int         @id @default(autoincrement())
  name                 String
  quantity             Int
  eventId              Int
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  event                tb_event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  tickets              tb_ticket[]
  batchs               tb_batch[]
}

model th_ticket_type_hist {
  id                   Int       @id @default(autoincrement())
  ticket_type_id       Int
  name                 String
  quantity             Int
  eventId              Int
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  changes              String?   @default("")
}

model tb_ticket {
  id                   Int            @id @default(autoincrement())
  ticketName           String
  batch_id             Int
  ticketTypeId         Int
  userId               Int
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  batch                tb_batch       @relation(fields: [batch_id], references: [id])
  ticket_type          tb_ticket_type @relation(fields: [ticketTypeId], references: [id], onDelete: Cascade)
  user                 tb_user        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([ticketTypeId, userId])
}

model th_ticket_hist {
  id                   Int       @id @default(autoincrement())
  ticket_id            Int
  batch_id             Int
  ticketName           String
  ticketTypeId         Int
  userId               Int
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  changes              String?   @default("")
}

model tb_event {
  id                   Int                  @id @default(autoincrement())
  name                 String
  organizerId          Int
  partyHouseId         Int
  nu_ingressos         Int                  @default(1000) //TODO depois remover
  dt_start             DateTime
  dt_end               DateTime
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  artists              tb_artist_on_event[]
  organizer            tb_user              @relation("OrganizerToEvent", fields: [organizerId], references: [id])
  party_house          tb_party_house       @relation(fields: [partyHouseId], references: [id], onDelete: Cascade)
  images               tb_event_image[]
  ticketTypes          tb_ticket_type[]
}

model th_event_hist {
  id                   Int       @id @default(autoincrement())
  event_id             Int
  name                 String
  organizerId          Int
  partyHouseId         Int
  nu_ingressos         Int       @default(1000) //TODO depois remover
  dt_start             DateTime
  dt_end               DateTime
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  changes              String?   @default("")
}

model tb_event_image {
  id      Int      @id @default(autoincrement())
  eventId Int
  path    String
  event   tb_event @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model tb_artist {
  id                   Int                  @id @default(autoincrement())
  name                 String
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  events               tb_artist_on_event[]
}

model th_artist_hist {
  id                   Int       @id @default(autoincrement())
  artist_id            Int
  name                 String
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  changes              String?   @default("")
}

model tb_artist_on_event {
  id       Int       @id @default(autoincrement())
  artistId Int
  eventId  Int
  artist   tb_artist @relation(fields: [artistId], references: [id], onDelete: Cascade)
  event    tb_event  @relation(fields: [eventId], references: [id], onDelete: Cascade)

  @@unique([artistId, eventId])
}

model tb_party_house {
  id                   Int        @id @default(autoincrement())
  name                 String
  address              String
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  events               tb_event[]
}

model th_party_house_hist {
  id                   Int       @id @default(autoincrement())
  party_house_id       Int
  name                 String
  address              String
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  changes              String?   @default("")
}

model tb_batch {
  id                   Int       @id @default(autoincrement())
  ticket_type_id       Int
  name                 String
  price                Float
  startDate            DateTime
  endDate              DateTime
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  changes              String?   @default("")

  tb_ticket      tb_ticket[]
  tb_ticket_type tb_ticket_type @relation(fields: [ticket_type_id], references: [id])
}

model th_batch_hist {
  id                   Int       @id @default(autoincrement())
  batch_id             Int
  ticket_type_id       Int
  name                 String
  price                Float
  startDate            DateTime
  endDate              DateTime
  dt_criacao           DateTime?
  dt_alteracao         DateTime?
  operation            String?
  endpoint_modificador String?
  nu_versao            Int?
  modified_by_id       Int?
  modified_by_name     String?
  changes              String?   @default("")
}

model tb_password_reset {
  id        Int      @id @default(autoincrement())
  email     String
  code      String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime
}

enum Role {
  ADMIN
  ORGANIZER
  PARTICIPANT
}
